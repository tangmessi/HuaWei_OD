'''
开发一个坐标计算工具， A表示向左移动，D表示向右移动，W表示向上移动，S表示向下移动。从（0,0）点开始移动，从输入字符串里面读取一些坐标，并将最终输入结果输出到输出文件里面。

输入：

合法坐标为A(或者D或者W或者S) + 数字（两位以内）

坐标之间以;分隔。

非法坐标点需要进行丢弃。如AA10;  A1A;  $%$;  YAD; 等。

下面是一个简单的例子 如：

A10;S20;W10;D30;X;A1A;B10A11;;A10;
'''
import re
p = r'(?<=;)[AWSD][0-9]{1,2}(?=;)'
list1 = re.findall(p,";"+input())
x ,y = 0,0
for i in list1:
    a = len(i)
    if i[0] =="W":
        y += int(i[1:a])
    elif i[0] =="A":
        x -= int(i[1:a])
    elif i[0] =="S":
        y -= int(i[1:a])
    else :
        x += int(i[1:a])
print("%d,%d"%(x,y))
#A10;S20;W10;D30;X;A1A;B10A11;;A10;